-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\Asurans\Downloads\fac\tese\window hdl coder\codegen\window_v3\hdlsrc\window_v3_fixpt.vhd
-- Created: 2024-02-04 21:21:36
-- 
-- Generated by MATLAB 9.10, MATLAB Coder 5.2 and HDL Coder 3.18
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: window_v3_fixpt
-- Source Path: window_v3_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY window_v3_fixpt IS
  PORT( CC_attack                         :   IN    unsigned(6 DOWNTO 0);  -- ufix7
        CC_release                        :   IN    unsigned(6 DOWNTO 0);  -- ufix7
        current                           :   IN    unsigned(15 DOWNTO 0);  -- ufix16
        size                              :   IN    unsigned(15 DOWNTO 0);  -- ufix16
        in_rsvd                           :   IN    signed(15 DOWNTO 0);  -- sfix16
        out_rsvd                          :   OUT   signed(15 DOWNTO 0)  -- sfix16
        );
END window_v3_fixpt;


ARCHITECTURE rtl OF window_v3_fixpt IS

  -- Constants
  CONSTANT C_divbyzero_p                  : signed(42 DOWNTO 0) := 
    signed'("0111111111111111111111111111111111111111111");  -- sfix43
  CONSTANT C_divbyzero_n                  : signed(42 DOWNTO 0) := 
    signed'("1000000000000000000000000000000000000000000");  -- sfix43
  CONSTANT c_divbyzero_p_0                : unsigned(40 DOWNTO 0) := 
    unsigned'("11111111111111111111111111111111111111111");  -- ufix41

BEGIN
  window_v3_fixpt_1_output : PROCESS (CC_attack, CC_release, current, in_rsvd, size)
    VARIABLE attack : unsigned(14 DOWNTO 0);
    VARIABLE release : unsigned(14 DOWNTO 0);
    VARIABLE sustain : signed(16 DOWNTO 0);
    VARIABLE a1 : signed(18 DOWNTO 0);
    VARIABLE tmp : signed(57 DOWNTO 0);
    VARIABLE tmp_0 : std_logic;
    VARIABLE tmp_1 : unsigned(55 DOWNTO 0);
    VARIABLE div_temp : signed(42 DOWNTO 0);
    VARIABLE div_temp_0 : unsigned(40 DOWNTO 0);
    VARIABLE add_temp : unsigned(7 DOWNTO 0);
    VARIABLE mul_temp : unsigned(23 DOWNTO 0);
    VARIABLE mul_temp_0 : unsigned(39 DOWNTO 0);
    VARIABLE add_cast : unsigned(16 DOWNTO 0);
    VARIABLE add_temp_0 : unsigned(7 DOWNTO 0);
    VARIABLE mul_temp_1 : unsigned(23 DOWNTO 0);
    VARIABLE mul_temp_2 : unsigned(39 DOWNTO 0);
    VARIABLE add_cast_0 : unsigned(16 DOWNTO 0);
    VARIABLE sub_temp : unsigned(16 DOWNTO 0);
    VARIABLE sub_cast : signed(19 DOWNTO 0);
    VARIABLE sub_cast_0 : signed(19 DOWNTO 0);
    VARIABLE sub_temp_0 : signed(19 DOWNTO 0);
    VARIABLE sub_temp_1 : unsigned(16 DOWNTO 0);
    VARIABLE sub_cast_1 : signed(18 DOWNTO 0);
    VARIABLE cast : signed(18 DOWNTO 0);
    VARIABLE add_cast_1 : signed(18 DOWNTO 0);
    VARIABLE cast_0 : signed(15 DOWNTO 0);
    VARIABLE slice_cast : signed(42 DOWNTO 0);
    VARIABLE slice_cast_0 : signed(15 DOWNTO 0);
    VARIABLE slice_cast_1 : signed(42 DOWNTO 0);
    VARIABLE cast_1 : signed(42 DOWNTO 0);
    VARIABLE cast_2 : signed(15 DOWNTO 0);
    VARIABLE sub_cast_2 : signed(59 DOWNTO 0);
    VARIABLE sub_temp_2 : signed(59 DOWNTO 0);
    VARIABLE mul_temp_3 : signed(75 DOWNTO 0);
    VARIABLE sub_temp_3 : unsigned(16 DOWNTO 0);
    VARIABLE cast_3 : unsigned(40 DOWNTO 0);
    VARIABLE cast_4 : signed(56 DOWNTO 0);
    VARIABLE mul_temp_4 : signed(72 DOWNTO 0);
    VARIABLE cast_5 : signed(71 DOWNTO 0);
  BEGIN
    div_temp := to_signed(0, 43);
    div_temp_0 := to_unsigned(0, 41);
    slice_cast_1 := to_signed(0, 43);
    sub_temp_2 := to_signed(0, 60);
    mul_temp_3 := to_signed(0, 76);
    sub_temp_3 := to_unsigned(16#00000#, 17);
    mul_temp_4 := to_signed(0, 73);
    cast := to_signed(16#00000#, 19);
    add_cast_1 := to_signed(16#00000#, 19);
    cast_0 := to_signed(16#0000#, 16);
    slice_cast := to_signed(0, 43);
    slice_cast_0 := to_signed(16#0000#, 16);
    cast_1 := to_signed(0, 43);
    cast_2 := to_signed(16#0000#, 16);
    sub_cast_2 := to_signed(0, 60);
    cast_3 := to_unsigned(0, 41);
    cast_4 := to_signed(0, 57);
    cast_5 := to_signed(0, 72);
    --HDL code generation from MATLAB function: window_v3_fixpt
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    --                                                                          %
    --          Generated by MATLAB 9.10 and Fixed-Point Designer 7.2           %
    --                                                                          %
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    --CC_attack and CC_release are MIDI CC parameters which can vary between
    --0-127 where 0=0% and 127=50%
    add_temp := resize(CC_attack, 8) + to_unsigned(16#01#, 8);
    mul_temp := add_temp * to_unsigned(16#8080#, 16);
    mul_temp_0 := mul_temp * size;
    add_cast := mul_temp_0(39 DOWNTO 23);
    attack := resize(resize(add_cast, 18) + to_unsigned(16#00001#, 18), 15);
    add_temp_0 := resize(CC_release, 8) + to_unsigned(16#01#, 8);
    mul_temp_1 := add_temp_0 * to_unsigned(16#8080#, 16);
    mul_temp_2 := mul_temp_1 * size;
    add_cast_0 := mul_temp_2(39 DOWNTO 23);
    release := resize(resize(add_cast_0, 18) + to_unsigned(16#00001#, 18), 15);
    sub_temp := resize(size, 17) - resize(attack, 17);
    sub_cast := signed(resize(sub_temp, 20));
    sub_cast_0 := signed(resize(release, 20));
    sub_temp_0 := sub_cast - sub_cast_0;
    sustain := sub_temp_0(16 DOWNTO 0);
    sub_temp_1 := resize(current, 17) - resize(attack, 17);
    sub_cast_1 := signed(resize(sub_temp_1, 19));
    a1 := sub_cast_1 - resize(sustain, 19);
    IF a1 < to_signed(16#00000#, 19) THEN 
      tmp := signed'("1000000000000000000000000000000000000000000000000000000000");
    ELSE 
      tmp := signed'("0111111111111111111111111111111111111111111111111111111111");
    END IF;
    IF current <= resize(attack, 16) THEN 
      tmp_0 := '1';
    ELSE 
      tmp_0 := '0';
    END IF;
    IF tmp_0 = '1' THEN 
      out_rsvd <= to_signed(16#0000#, 16);
    ELSE 
      cast := signed(resize(current, 19));
      add_cast_1 := signed(resize(attack, 19));
      IF cast < (add_cast_1 + resize(sustain, 19)) THEN 
        out_rsvd <= in_rsvd;
      ELSE 
        IF  NOT (release = to_unsigned(16#0000#, 15)) THEN 
          cast_0 := signed(resize(release, 16));
          slice_cast := a1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
          slice_cast_0 := signed(resize(release, 16));
          IF slice_cast(42) = slice_cast_0(15) THEN 
            slice_cast_1 := C_divbyzero_p;
          ELSE 
            slice_cast_1 := C_divbyzero_n;
          END IF;
          cast_1 := a1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
          cast_2 := signed(resize(release, 16));
          IF cast_0 = 0 THEN 
            div_temp := slice_cast_1;
          ELSE 
            div_temp := cast_1 / cast_2;
          END IF;
          tmp := resize(div_temp, 58);
        END IF;
        sub_cast_2 := resize(tmp, 60);
        sub_temp_2 := to_signed(16777216, 60) - sub_cast_2;
        mul_temp_3 := sub_temp_2 * in_rsvd;
        out_rsvd <= mul_temp_3(39 DOWNTO 24);
      END IF;
    END IF;
    IF tmp_0 = '1' THEN 
      IF attack = to_unsigned(16#0000#, 15) THEN 
        tmp_1 := unsigned'(X"FFFFFFFFFFFFFF");
      ELSE 
        sub_temp_3 := resize(current, 17) - to_unsigned(16#00001#, 17);
        cast_3 := sub_temp_3 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        IF attack = 0 THEN 
          div_temp_0 := c_divbyzero_p_0;
        ELSE 
          div_temp_0 := cast_3 / attack;
        END IF;
        tmp_1 := resize(div_temp_0, 56);
      END IF;
    ELSE 
      tmp_1 := to_unsigned(0, 56);
    END IF;
    IF tmp_0 = '1' THEN 
      cast_4 := signed(resize(tmp_1, 57));
      mul_temp_4 := cast_4 * in_rsvd;
      cast_5 := mul_temp_4(71 DOWNTO 0);
      out_rsvd <= cast_5(39 DOWNTO 24);
    END IF;
  END PROCESS window_v3_fixpt_1_output;


END rtl;

